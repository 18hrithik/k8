# =========================
# ConfigMaps
# =========================

# Cata ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: cata
  namespace: roboshop
data:
  # environment variables your cata service needs
  DB_HOST: mongodb
  DB_PORT: "27017"

---
# Web ConfigMap with nginx config
apiVersion: v1
kind: ConfigMap
metadata:
  name: web
  namespace: roboshop
data:
  roboshop.conf: |
    user www-data;
    worker_processes 1;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log warn;

      gzip on;
      gzip_disable "msie6";

      server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }

        location /images/ {
            root /usr/share/nginx/html;
            try_files $uri /images/placeholder.png;
            expires 5s;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location /api/cata/ { proxy_pass http://cata:8080/; }
        location /api/user/ { proxy_pass http://user:8080/; }
        location /api/cart/ { proxy_pass http://cart:8080/; }
        location /api/shipping/ { proxy_pass http://shipping:8080/; }
        location /api/payment/ { proxy_pass http://payment:8080/; }
      }
    }

# =========================
# Deployments
# =========================

# Cata Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cata
  namespace: roboshop
  labels:
    app: cata
    project: roboshop
    tier: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cata
      project: roboshop
      tier: app
  template:
    metadata:
      labels:
        app: cata
        project: roboshop
        tier: app
    spec:
      containers:
      - name: cata
        image: madashrithik/cata:v1
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: cata
        ports:
        - containerPort: 8080

---
# Web Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: roboshop
  labels:
    app: web
    project: roboshop
    tier: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
      project: roboshop
      tier: web
  template:
    metadata:
      labels:
        app: web
        project: roboshop
        tier: web
    spec:
      # Wait for cata to be ready
      initContainers:
      - name: wait-for-cata
        image: busybox
        command:
          [
            "sh", "-c",
            "until nc -z cata 8080; do echo waiting for cata; sleep 3; done"
          ]
      containers:
      - name: web
        image: madashrithik/web:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: roboshop.conf
          readOnly: true
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: nginx-conf
        configMap:
          name: web
          items:
            - key: roboshop.conf
              path: roboshop.conf

# =========================
# Services
# =========================

# Cata Service
apiVersion: v1
kind: Service
metadata:
  name: cata
  namespace: roboshop
spec:
  type: ClusterIP
  selector:
    app: cata
    project: roboshop
    tier: app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080

---
# Web Service
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: roboshop
spec:
  type: LoadBalancer
  selector:
    app: web
    project: roboshop
    tier: web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
