apiVersion: v1
kind: Namespace
metadata:
  name: roboshop
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web
  namespace: roboshop
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
      access_log  /var/log/nginx/access.log  main;
      sendfile        on;
      keepalive_timeout  65;

      # ✅ Prevent Nginx crash when services are missing
      resolver kube-dns.kube-system.svc.cluster.local valid=10s ipv6=off;

      server {
        listen 80;
        server_name localhost;

        location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
        }

        # Optional API routes — Nginx will retry when DNS resolves
        location /api/catalogue/ {
          proxy_pass http://catalogue.roboshop.svc.cluster.local:8080/;
          proxy_connect_timeout 2s;
          proxy_read_timeout 5s;
        }

        location /api/user/ {
          proxy_pass http://user.roboshop.svc.cluster.local:8080/;
          proxy_connect_timeout 2s;
          proxy_read_timeout 5s;
        }

        location /api/cart/ {
          proxy_pass http://cart.roboshop.svc.cluster.local:8080/;
          proxy_connect_timeout 2s;
          proxy_read_timeout 5s;
        }

        location /api/shipping/ {
          proxy_pass http://shipping.roboshop.svc.cluster.local:8080/;
          proxy_connect_timeout 2s;
          proxy_read_timeout 5s;
        }

        location /api/payment/ {
          proxy_pass http://payment.roboshop.svc.cluster.local:8080/;
          proxy_connect_timeout 2s;
          proxy_read_timeout 5s;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: roboshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
      project: roboshop
      tier: web
  template:
    metadata:
      labels:
        app: web
        project: roboshop
        tier: web
    spec:
      containers:
      - name: web
        image: madashrithik/web:v1
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: web
          items:
          - key: nginx.conf
            path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: roboshop
spec:
  type: LoadBalancer
  selector:
    app: web
    project: roboshop
    tier: web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
