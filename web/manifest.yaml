apiVersion: v1
kind: Namespace
metadata:
  name: roboshop
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web
  namespace: roboshop
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;

      # --- Key line: dynamically resolve Kubernetes DNS ---
      resolver kube-dns.kube-system.svc.cluster.local valid=10s ipv6=off;

      upstream catalogue {
        zone catalogue 64k;
        server catalogue.roboshop.svc.cluster.local:8080 resolve;
        keepalive 32;
      }

      upstream user {
        zone user 64k;
        server user.roboshop.svc.cluster.local:8080 resolve;
        keepalive 32;
      }

      server {
        listen 80;
        server_name localhost;

        location /catalogue/ {
          proxy_pass http://catalogue/;
          proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
        }

        location /user/ {
          proxy_pass http://user/;
          proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
        }

        location / {
          return 200 "Web service is running. Some backends may be unavailable.\n";
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: roboshop
  labels:
    app: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: web
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: roboshop
spec
